image: node:latest

variables:
  GIT_SUBMODULE_STRATEGY: recursive

stages:
  - build
  - test

build:
  stage: build
  script:
   - npm install
   - npx tsc
  cache:
    paths:
     - node_modules/
  artifacts:
    untracked: true
    when: on_success

test_custom:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "testCode/**/*.js"

test_harness:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/harness/**/*.js"

test_annexB:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/annexB/**/*.js"

test_builtins:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/built-ins/**/*.js"

test_intl402:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/intl402/**/*.js"

test_language_arguments-object:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/arguments-object/**/*.js"

test_language_asi:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/asi/**/*.js"

test_language_block-scope:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/block-scope/**/*.js"

test_language_comments:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/comments/**/*.js"

test_language_computed-property-names:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/computed-property-names/**/*.js"

test_language_destructuring_binding:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/destructuring/binding/**/*.js"

test_language_directive-prologue:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/directive-prologue/**/*.js"

test_language_eval-code:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/eval-code/**/*.js"

test_language_export:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/export/**/*.js"

test_language_expressions:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/expressions/**/*.js"

test_language_function-code:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/function-code/**/*.js"

test_language_future-reserved-words:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/future-reserved-words/**/*.js"

test_language_global-code:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/global-code/**/*.js"

test_language_identifier-resolution:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/identifier-resolution/**/*.js"

test_language_identifiers:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/identifiers/**/*.js"

test_language_import:
  stage: test
  script:
   - npm run start
  variables:
    TESTS_GLOB: "test262/test/language/import/**/*.js"
